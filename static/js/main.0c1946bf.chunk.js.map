{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","itemsLengthArray","Array","Math","ceil","fill","onPageLinkClick","value","condition","className","href","onClick","map","item","index","length","items","from","to","numbers","n","push","getNumbers","App","useState","itemsToRender","setItemsToRender","setPerPage","setCurrentPage","leadNumbers","setLeadNumbers","useEffect","startIndex","endIndex","slice","id","onChange","e","target","htmlFor","page","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c1946bf.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const itemsLengthArray = new Array(Math.ceil(total / perPage)).fill('item');\n  const onPageLinkClick = (value: number, condition = true) => {\n    return condition && onPageChange(value);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`${currentPage === 1 ? 'disabled ' : ''}page-item`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={\n            () => onPageLinkClick(currentPage - 1, currentPage !== 1)\n          }\n        >\n          «\n        </a>\n      </li>\n\n      {itemsLengthArray.map((item, index) => (\n        <li\n          key={item}\n          className={`${(currentPage - 1) === index ? 'active' : ''} page-item`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${index + 1}`}\n            onClick={() => onPageLinkClick(index + 1)}\n          >\n            {index}\n          </a>\n        </li>\n      ))}\n\n      <li className={`${currentPage === itemsLengthArray.length ? 'disabled ' : ''}page-item`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === itemsLengthArray.length}\n          onClick={() => onPageLinkClick(\n            currentPage + 1,\n            currentPage !== itemsLengthArray.length,\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsToRender, setItemsToRender] = useState(items);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [leadNumbers, setLeadNumbers] = useState('');\n  const total = items.length;\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(() => page);\n  };\n\n  const handlePerPageChange = (value: number) => {\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * perPage + 1;\n    const endIndex = startIndex + perPage - 1;\n\n    setItemsToRender(items.slice(startIndex - 1, endIndex));\n    setLeadNumbers(`${startIndex} - ${endIndex > total ? total : endIndex}`);\n  }, [currentPage, perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${leadNumbers} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => handlePerPageChange(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsToRender.map((item, i) => (\n          i < perPage\n          && <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}